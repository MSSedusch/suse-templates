{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "sapSystemId": {
            "type": "string",
            "defaultValue": "TST"
        },
        "osType": {
            "type": "string",
            "allowedValues": [
                "SLES for SAP 12 SP3 (Premium)"
            ],
            "defaultValue": "SLES for SAP 12 SP3 (Premium)",
            "metadata": {
                "description": "The type of the operating system you want to deploy."
            }
        },
        "size": {
            "type": "string",
            "allowedValues": [
                "Demo",
                "Small",
                "Medium",
                "Large"
            ],
            "defaultValue": "Demo",
            "metadata": {
                "description": "The type of the operating system you want to deploy."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "sapadmin",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "sshKeyData": {
            "type": "string",
            "defaultValue": ""
        },
        "createVNET": {
            "type": "bool",
            "defaultValue": true
        },
        "vnetResourceGroup": {
            "defaultValue": "",
            "type": "string"
        },
        "addressPrefix": {
            "defaultValue": "10.0.0.0/16",
            "type": "string"
        },
        "subnetName": {
            "defaultValue": "subnet",
            "type": "string"
        },
        "subnetPrefix": {
            "defaultValue": "10.0.0.0/24",
            "type": "string"
        },
        "nsgName": {
            "defaultValue": "nsg",
            "type": "string"
        },
        "vnetName": {
            "defaultValue": "vnet",
            "type": "string"
        },
        "appAVSetName": {
            "defaultValue": "app-av",
            "type": "string"
        },
        "appNICName": {
            "defaultValue": "app-nic",
            "type": "string"
        },
        "appVMName": {
            "defaultValue": "app-vm",
            "type": "string"
        },
        "xscsPIPName": {
            "defaultValue": "sap-pip",
            "type": "string"
        },
        "xscsNICName": {
            "defaultValue": "sap-nic",
            "type": "string"
        },
        "xscsVMName": {
            "defaultValue": "sap-vm",
            "type": "string"
        },
        "hNICName": {
            "defaultValue": "hana-nic",
            "type": "string"
        },
        "hVMName": {
            "defaultValue": "hana-vm",
            "type": "string"
        },
        "_SUSETags": {
            "type": "object",
            "defaultValue": {
                "provider": "b0d27bab-bf43-4cad-9bf5-40a8041d59b8"
            }
        }
    },
    "variables": {
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "sshKeysArrayKey": [
            {
                "path": "[variables('sshKeyPath')]",
                "keyData": "[parameters('sshKeyData')]"
            }
        ],
        "sshKeysArrayEmpty": [
        ],
        "sshKeysArray": "[if(equals(length(parameters('sshKeyData')), 0), variables('sshKeysArrayEmpty'), variables('sshKeysArrayKey'))]",
        "subnetConfigs": {
            "true": {
                "subnet": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
            },
            "false": {
                "subnet": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
            }
        },
        "internalSubnetId": "[variables('subnetConfigs')[string(parameters('createVNET'))].subnet]",
        "images": {
            "SLES for SAP 12 SP3 (Premium)": {
                "sku": "12-SP3",
                "offer": "SLES-SAP",
                "publisher": "SUSE",
                "version": "latest",
                "OSType": "Linux"
            }
        },
        "sizes": {
            "Demo": {
                "hana": {
                    "vmSize": "Standard_E4s_v3",
                    "disks": [
                        {
                            "lun": 0,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 128
                        },
                        {
                            "lun": 1,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 128
                        },
                        {
                            "lun": 2,
                            "caching": "None",
                            "createOption": "Empty",
                            "diskSizeGB": 128
                        },
                        {
                            "lun": 3,
                            "caching": "None",
                            "createOption": "Empty",
                            "diskSizeGB": 128
                        },
                        {
                            "lun": 4,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 128
                        },
                        {
                            "lun": 5,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 128
                        },
                        {
                            "lun": 6,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 128
                        },
                        {
                            "lun": 7,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 128
                        }
                    ],
                    "scriptArguments": "-luns '0,1#2,3#4#5#6,7' -names 'data#log#shared#usrsap#backup' -paths '/hana/data#/hana/log#/hana/shared#/usr/sap#/hana/backup'  -sizes '100#100#100#100#100'",
                    "useFastNetwork": false
                },
                "xscs": {
                    "vmSize": "Standard_D2s_v3",
                    "disks": [],
                    "scriptArguments": "-luns",
                    "useFastNetwork": false
                },
                "apps": {
                    "vmSize": "Standard_D2s_v3",
                    "vmCount": 2,
                    "disks": [
                        {
                            "lun": 0,
                            "createOption": "Empty",
                            "diskSizeGB": 128
                        }
                    ],
                    "scriptArguments": "[concat('-luns 0 -names sap -paths /usr/sap/', parameters('sapSystemId'))]",
                    "useFastNetwork": false
                }
            },
            "Small": {
                "hana": {
                    "vmSize": "Standard_E64s_v3",
                    "disks": [
                        {
                            "lun": 0,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 512
                        },
                        {
                            "lun": 1,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 512
                        },
                        {
                            "lun": 2,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 512
                        },
                        {
                            "lun": 3,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 512
                        },
                        {
                            "lun": 4,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 64
                        },
                        {
                            "lun": 5,
                            "caching": "None",
                            "createOption": "Empty",
                            "diskSizeGB": 1024
                        }
                    ],
                    "scriptArguments": "-luns '0,1,2#3#4#5' -names 'datalog#shared#usrsap#backup' -paths '/hana/data,/hana/log#/hana/shared#/usr/sap#/hana/backup' -sizes '70,100#100#100#100'",
                    "useFastNetwork": true
                },
                "xscs": {
                    "vmSize": "Standard_D2s_v3",
                    "disks": [],
                    "scriptArguments": "-luns",
                    "useFastNetwork": false
                },
                "apps": {
                    "vmSize": "Standard_E64s_v3",
                    "vmCount": 5,
                    "disks": [
                        {
                            "lun": 0,
                            "createOption": "Empty",
                            "diskSizeGB": 128
                        }
                    ],
                    "scriptArguments": "[concat('-luns 0 -names sap -paths /usr/sap/', parameters('sapSystemId'))]",
                    "useFastNetwork": true
                }
            },
            "Medium": {
                "hana": {
                    "vmSize": "Standard_M64s",
                    "disks": [
                        {
                            "lun": 0,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 512
                        },
                        {
                            "lun": 1,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 512
                        },
                        {
                            "lun": 2,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 512
                        },
                        {
                            "lun": 3,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 512
                        },
                        {
                            "lun": 4,
                            "caching": "None",
                            "writeAcceleratorEnabled": "true",
                            "createOption": "Empty",
                            "diskSizeGB": 512
                        },
                        {
                            "lun": 5,
                            "caching": "None",
                            "writeAcceleratorEnabled": "true",
                            "createOption": "Empty",
                            "diskSizeGB": 512
                        },
                        {
                            "lun": 6,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 1024
                        },
                        {
                            "lun": 7,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 64
                        },
                        {
                            "lun": 8,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 1024
                        },
                        {
                            "lun": 9,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 1024
                        }
                    ],
                    "scriptArguments": "-luns '0,1,2,3#4,5#6#7#8,9' -names 'data#log#shared#usrsap#backup' -paths '/hana/data#/hana/log#/hana/shared#/usr/sap#/hana/backup' -sizes '100#100#100#100#100'",
                    "useFastNetwork": true
                },
                "xscs": {
                    "vmSize": "Standard_D2s_v3",
                    "disks": [],
                    "scriptArguments": "-luns",
                    "useFastNetwork": false
                },
                "apps": {
                    "vmSize": "Standard_E64s_v3",
                    "vmCount": 5,
                    "disks": [
                        {
                            "lun": 0,
                            "createOption": "Empty",
                            "diskSizeGB": 128
                        }
                    ],
                    "scriptArguments": "[concat('-luns 0 -names sap -paths /usr/sap/', parameters('sapSystemId'))]",
                    "useFastNetwork": true
                }
            },
            "Large": {
                "hana": {
                    "vmSize": "Standard_M128s",
                    "disks": [
                        {
                            "lun": 0,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 1024
                        },
                        {
                            "lun": 1,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 1024
                        },
                        {
                            "lun": 2,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 1024
                        },                        
                        {
                            "lun": 3,
                            "caching": "None",
                            "writeAcceleratorEnabled": "true",
                            "createOption": "Empty",
                            "diskSizeGB": 512
                        },
                        {
                            "lun": 4,
                            "caching": "None",
                            "writeAcceleratorEnabled": "true",  
                            "createOption": "Empty",
                            "diskSizeGB": 512
                        },
                        {
                            "lun": 5,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 1024
                        },
                        {
                            "lun": 6,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 64
                        },
                        {
                            "lun": 7,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 2048
                        },
                        {
                            "lun": 8,
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "diskSizeGB": 2048
                        }
                    ],
                    "scriptArguments": "-luns '0,1,2#3,4#5#6#7,8' -names 'data#log#shared#usrsap#backup' -paths '/hana/data#/hana/log#/hana/shared#/usr/sap#/hana/backup' -sizes '100#100#100#100#100'",
                    "useFastNetwork": true
                },
                "xscs": {
                    "vmSize": "Standard_D2s_v3",
                    "disks": [],
                    "scriptArguments": "-luns",
                    "useFastNetwork": false
                },
                "apps": {
                    "vmSize": "Standard_E64s_v3",
                    "vmCount": 10,
                    "disks": [
                        {
                            "lun": 0,
                            "createOption": "Empty",
                            "diskSizeGB": 128
                        }
                    ],
                    "scriptArguments": "[concat('-luns 0 -names sap -paths /usr/sap/', parameters('sapSystemId'))]",
                    "useFastNetwork": true
                }
            }
        },
        "appvmCount": "[variables('sizes')[parameters('size')].apps.vmCount]",
        "appOSDiskCaching": "ReadWrite",
        "appOSDiskStorageType": "Premium_LRS",
        "xscsOSDiskCaching": "ReadWrite",
        "xscsOSDiskStorageType": "Premium_LRS",
        "hOSDiskCaching": "ReadWrite",
        "hOSDiskStorageType": "Premium_LRS",
        "faultDomainsPerRegion": {
            "eastus": 3,
            "eastus2": 3,
            "westus": 3,
            "westus2": 2,
            "centralus": 3,
            "northcentralus": 3,
            "southcentralus": 3,
            "westcentralus": 2,
            "canadacentral": 2,
            "canadaeast": 2,
            "northeurope": 3,
            "westeurope": 3,
            "uksouth": 2,
            "ukwest": 2,
            "eastasia": 2,
            "southeastasia": 2,
            "japaneast": 2,
            "japanwest": 2,
            "southindia": 2,
            "centralindia": 2,
            "westindia": 2,
            "koreacentral": 2,
            "koreasouth": 2,
            "australiaeast": 2,
            "australiasoutheast": 2,
            "brazilsouth": 2,
            "usgovvirginia": 2,
            "usgovtexas": 2,
            "usgovarizona": 2,
            "usdodcentral": 2,
            "usdodeast": 2
          }
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(parameters('nsgName'))]",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "condition": "[parameters('createVNET')]",
            "tags": {
                "provider": "[toUpper(parameters('_SUSETags').provider)]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "description": "Allow SSH Subnet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vnetName')]",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('nsgName'))]"
            ],
            "condition": "[parameters('createVNET')]",
            "tags": {
                "provider": "[toUpper(parameters('_SUSETags').provider)]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('xscsPIPName')]",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
            ],
            "location": "[parameters('location')]",
            "condition": "[parameters('createVNET')]",
            "tags": {
                "provider": "[toUpper(parameters('_SUSETags').provider)]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('xscsNICName')]",
            "apiVersion": "2017-06-01",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('xscsPIPName'))]"
            ],
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('_SUSETags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": "[if(parameters('createVNET'), json(concat('{\"id\": \"', resourceId('Microsoft.Network/publicIPAddresses', parameters('xscsPIPName')) ,'\"}')), json('null'))]",
                            "subnet": {
                                "id": "[variables('internalSubnetId')]"
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": "[variables('sizes')[parameters('size')].xscs.useFastNetwork]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('xscsVMName')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('xscsNICName'))]"
            ],
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('_SUSETags').provider)]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('sizes')[parameters('size')].xscs.vmSize]"
                },
                "osProfile": {
                    "computerName": "[parameters('xscsVMName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "[if(equals(length(parameters('sshKeyData')), 0), bool('false'), bool('true'))]",
                        "ssh": {
                            "publicKeys": "[variables('sshKeysArray')]"
                        }
                    },
                    "customData": "IyEvYmluL2Jhc2gKCmZ1bmN0aW9uIGxvZygpCnsKICBtZXNzYWdlPSRACiAgZWNobyAiJG1lc3NhZ2UiCiAgZWNobyAiJG1lc3NhZ2UiID4+IC92YXIvbG9nL3NhcGNvbmZpZ2NyZWF0ZQp9Cgpsb2cgJEA="
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('images')[parameters('osType')].publisher]",
                        "offer": "[variables('images')[parameters('osType')].offer]",
                        "sku": "[variables('images')[parameters('osType')].sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('xscsVMName'), '-osdisk')]",
                        "caching": "[variables('xscsOSDiskCaching')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('xscsOSDiskStorageType')]"
                        }
                    },
                    "dataDisks": "[variables('sizes')[parameters('size')].xscs.disks]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('xscsNICName'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('xscsVMName'), '/', 'CustomScript')]",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('xscsVMName'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('_SUSETags').provider)]"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [],
                    "commandToExecute": "[concat('while [ ! -f /var/lib/waagent/CustomData ]; do sleep 1; done;sleep 10;cat /var/lib/waagent/CustomData | base64 --decode | sh -s -- ', variables('sizes')[parameters('size')].xscs.scriptArguments)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('hNICName')]",
            "apiVersion": "2017-06-01",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
            ],
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('_SUSETags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('internalSubnetId')]"
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": "[variables('sizes')[parameters('size')].hana.useFastNetwork]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('hVMName')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('hNICName'))]"
            ],
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('_SUSETags').provider)]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('sizes')[parameters('size')].hana.vmSize]"
                },
                "osProfile": {
                    "computerName": "[parameters('hVMName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "[if(equals(length(parameters('sshKeyData')), 0), bool('false'), bool('true'))]",
                        "ssh": {
                            "publicKeys": "[variables('sshKeysArray')]"
                        }
                    },
                    "customData": "IyEvYmluL2Jhc2gKCmZ1bmN0aW9uIGxvZygpCnsKICBtZXNzYWdlPSRACiAgZWNobyAiJG1lc3NhZ2UiCiAgZWNobyAiJG1lc3NhZ2UiID4+IC92YXIvbG9nL3NhcGNvbmZpZ2NyZWF0ZQp9CgpmdW5jdGlvbiBhZGR0b2ZzdGFiKCkKewogIGxvZyAiYWRkdG9mc3RhYiIKICBwYXJ0UGF0aD0kMQogIG1vdW50PSQyCiAgaWYgWyAiJG1vdW50IiA9IHRydWUgXSA7CiAgdGhlbgogICAgbG9jYWwgYmxraWQ9JCgvc2Jpbi9ibGtpZCAkcGFydFBhdGgpCiAgICAKICAgIGlmIFtbICRibGtpZCA9fiAgVVVJRD1cIiguezM2fSlcIiBdXQogICAgdGhlbgogICAgCiAgICAgIGxvZyAiQWRkaW5nIGZzdGFiIGVudHJ5IgogICAgICBsb2NhbCB1dWlkPSR7QkFTSF9SRU1BVENIWzFdfTsKICAgICAgbG9jYWwgbW91bnRDbWQ9IiIKICAgICAgbG9nICJhZGRpbmcgZnN0YWIgZW50cnkiCiAgICAgIG1vdW50Q21kPSIvZGV2L2Rpc2svYnktdXVpZC8kdXVpZCAkbW91bnQgeGZzICBkZWZhdWx0cyxub2ZhaWwgIDAgIDIiCiAgICAgIGVjaG8gIiRtb3VudENtZCIgPj4gL2V0Yy9mc3RhYgogICAgICAkKG1vdW50ICRtb3VudCkKICAgIAogICAgZWxzZQogICAgICBsb2cgIm5vIFVVSUQgZm91bmQiCiAgICAgIGV4aXQgLTE7CiAgICBmaQogIGVsc2UKICAgICQobW91bnQgJHBhcnRQYXRoICRtb3VudCkKICBmaQogIAogIGxvZyAiYWRkdG9mc3RhYiBkb25lIgp9CgpmdW5jdGlvbiBnZXRkZXZpY2VwYXRoKCkKewoKICBsb2cgImdldGRldmljZXBhdGgiCiAgZ2V0ZGV2aWNlcGF0aHJlc3VsdD0iIgogIGxvY2FsIGx1bj0kMQogIGxvY2FsIHJlYWRsaW5rT3V0cHV0PSQocmVhZGxpbmsgL2Rldi9kaXNrL2F6dXJlL3Njc2kxL2x1biRsdW4pCiAgbG9jYWwgc2NzaU91dHB1dD0kKGxzc2NzaSkKICBpZiBbWyAkcmVhZGxpbmtPdXRwdXQgPX4gKHNkW2EtekEtWl17MSwyfSkgXV07CiAgdGhlbgogICAgbG9nICJmb3VuZCBkZXZpY2UgcGF0aCB1c2luZyByZWFkbGluayIKICAgIGdldGRldmljZXBhdGhyZXN1bHQ9Ii9kZXYvJHtCQVNIX1JFTUFUQ0hbMV19IjsKICBlbGlmIFtbICRzY3NpT3V0cHV0ID1+IFxbNTowOjA6JGx1blxdW15cW10qKC9kZXYvc2RbYS16QS1aXXsxLDJ9KSBdXTsKICB0aGVuCiAgICBsb2cgImZvdW5kIGRldmljZSBwYXRoIHVzaW5nIGxzc2NzaSIKICAgIGdldGRldmljZXBhdGhyZXN1bHQ9JHtCQVNIX1JFTUFUQ0hbMV19OwogIGVsc2UKICAgIGxvZyAibHNzY3NpIG91dHB1dCBub3QgYXMgZXhwZWN0ZWQgZm9yICRsdW4iCiAgICBleGl0IC0xOwogIGZpCiAgbG9nICJnZXRkZXZpY2VwYXRoIGRvbmUiCgp9CgpmdW5jdGlvbiBjcmVhdGVsdm0oKQp7CiAgCiAgbG9nICJjcmVhdGVsdm0iCgogIGxvY2FsIGx1bnNBPSgkezEvLywvIH0pCiAgbG9jYWwgdmdOYW1lPSQyCiAgbG9jYWwgbHZOYW1lPSQzCiAgbG9jYWwgbW91bnRQYXRoQT0oJHs0Ly8sLyB9KQogIGxvY2FsIHNpemVBPSgkezUvLywvIH0pCgogIGxvY2FsIGx1bnNDb3VudD0keyNsdW5zQVtAXX0KICBsb2NhbCBtb3VudFBhdGhDb3VudD0keyNtb3VudFBhdGhBW0BdfQogIGxvY2FsIHNpemVDb3VudD0keyNzaXplQVtAXX0KICBsb2cgImNvdW50ICRsdW5zQ291bnQgJG1vdW50UGF0aENvdW50ICRzaXplQ291bnQiCiAgaWYgW1sgJGx1bnNDb3VudCAtZ3QgMSBdXQogIHRoZW4KICAgIGxvZyAiY3JlYXRlbHZtIC0gY3JlYXRpbmcgbHZtIgoKICAgIGxvY2FsIG51bVJhaWREZXZpY2VzPTAKICAgIGxvY2FsIHJhaWREZXZpY2VzPSIiCiAgICBsb2cgIm51bSBsdW5zICRsdW5zQ291bnQiCiAgICAKICAgIGZvciAoKGk9MDsgaTxsdW5zQ291bnQ7IGkrKykpCiAgICBkbwogICAgICBsb2cgInRyeWluZyB0byBmaW5kIGRldmljZSBwYXRoIgogICAgICBsb2NhbCBsdW49JHtsdW5zQVskaV19CiAgICAgIGdldGRldmljZXBhdGggJGx1bgogICAgICBsb2NhbCBkZXZpY2VQYXRoPSRnZXRkZXZpY2VwYXRocmVzdWx0OwogICAgICAKICAgICAgaWYgWyAtbiAiJGRldmljZVBhdGgiIF07CiAgICAgIHRoZW4KICAgICAgICBsb2cgIiBEZXZpY2UgUGF0aCBpcyAkZGV2aWNlUGF0aCIKICAgICAgICBudW1SYWlkRGV2aWNlcz0kKChudW1SYWlkRGV2aWNlcyArIDEpKQogICAgICAgIHJhaWREZXZpY2VzPSIkcmFpZERldmljZXMgJGRldmljZVBhdGggIgogICAgICBlbHNlCiAgICAgICAgbG9nICJubyBkZXZpY2UgcGF0aCBmb3IgTFVOICRsdW4iCiAgICAgICAgZXhpdCAtMTsKICAgICAgZmkKICAgIGRvbmUKCiAgICBsb2cgIm51bTogJG51bVJhaWREZXZpY2VzIHBhdGhzOiAnJHJhaWREZXZpY2VzJyIKICAgICQocHZjcmVhdGUgJHJhaWREZXZpY2VzKQogICAgJCh2Z2NyZWF0ZSAkdmdOYW1lICRyYWlkRGV2aWNlcykKCiAgICBmb3IgKChqPTA7IGo8bW91bnRQYXRoQ291bnQ7IGorKykpCiAgICBkbwogICAgICBsb2NhbCBtb3VudFBhdGhMb2M9JHttb3VudFBhdGhBWyRqXX0KICAgICAgbG9jYWwgc2l6ZUxvYz0ke3NpemVBWyRqXX0KICAgICAgbG9jYWwgbHZOYW1lTG9jPSIkbHZOYW1lLSRqIgogICAgICAkKGx2Y3JlYXRlIC0tZXh0ZW50cyAkc2l6ZUxvYyVGUkVFIC0tc3RyaXBlcyAkbnVtUmFpZERldmljZXMgLS1uYW1lICRsdk5hbWVMb2MgJHZnTmFtZSkKICAgICAgJChta2ZzIC10IHhmcyAvZGV2LyR2Z05hbWUvJGx2TmFtZUxvYykKICAgICAgJChta2RpciAtcCAkbW91bnRQYXRoTG9jKQogICAgCiAgICAgIGFkZHRvZnN0YWIgL2Rldi8kdmdOYW1lLyRsdk5hbWVMb2MgJG1vdW50UGF0aExvYwogICAgZG9uZQoKICBlbHNlCiAgICBsb2cgImNyZWF0ZWx2bSAtIGNyZWF0aW5nIHNpbmdsZSBkaXNrIgoKICAgIGxvY2FsIGx1bj0ke2x1bnNBWzBdfQogICAgbG9jYWwgbW91bnRQYXRoTG9jPSR7bW91bnRQYXRoQVswXX0KICAgIGdldGRldmljZXBhdGggJGx1bjsKICAgIGxvY2FsIGRldmljZVBhdGg9JGdldGRldmljZXBhdGhyZXN1bHQ7CiAgICBpZiBbIC1uICIkZGV2aWNlUGF0aCIgXTsKICAgIHRoZW4KICAgICAgbG9nICIgRGV2aWNlIFBhdGggaXMgJGRldmljZVBhdGgiCiAgICAgICMgaHR0cDovL3N1cGVydXNlci5jb20vcXVlc3Rpb25zLzMzMjI1Mi9jcmVhdGluZy1hbmQtZm9ybWF0aW5nLWEtcGFydGl0aW9uLXVzaW5nLWEtYmFzaC1zY3JpcHQKICAgICAgJChlY2hvIC1lICJuXG5wXG4xXG5cblxudyIgfCBmZGlzayAkZGV2aWNlUGF0aCkgPiAvZGV2L251bGwKICAgICAgbG9jYWwgcGFydFBhdGg9IiRkZXZpY2VQYXRoIiIxIgogICAgICAkKG1rZnMgLXQgeGZzICRwYXJ0UGF0aCkgPiAvZGV2L251bGwKICAgICAgJChta2RpciAtcCAkbW91bnRQYXRoTG9jKQoKICAgICAgYWRkdG9mc3RhYiAkcGFydFBhdGggJG1vdW50UGF0aExvYwogICAgZWxzZQogICAgICBsb2cgIm5vIGRldmljZSBwYXRoIGZvciBMVU4gJGx1biIKICAgICAgZXhpdCAtMTsKICAgIGZpCiAgZmkKCiAgbG9nICJjcmVhdGVsdm0gZG9uZSIKfQoKbG9nICRACgpsdW5zPSIiCm5hbWVzPSIiCnBhdGhzPSIiCnNpemVzPSIiCgp3aGlsZSB0cnVlOyAKZG8KICBjYXNlICIkMSIgaW4KICAgICItbHVucyIpICBsdW5zPSQyO3NoaWZ0IDI7bG9nICJmb3VuZCBsdW5zIgogICAgOzsKICAgICItbmFtZXMiKSAgbmFtZXM9JDI7c2hpZnQgMjtsb2cgImZvdW5kIG5hbWVzIgogICAgOzsKICAgICItcGF0aHMiKSAgcGF0aHM9JDI7c2hpZnQgMjtsb2cgImZvdW5kIHBhdGhzIgogICAgOzsKICAgICItc2l6ZXMiKSAgc2l6ZXM9JDI7c2hpZnQgMjtsb2cgImZvdW5kIHNpemVzIgogICAgOzsKICAgICopIGxvZyAidW5rbm93biBwYXJhbWV0ZXIgJDEiO3NoaWZ0IDE7CiAgICA7OwogIGVzYWMKCiAgaWYgW1sgLXogIiQxIiBdXTsKICB0aGVuIAogICAgYnJlYWs7IAogIGZpCmRvbmUKCmx1bnNTcGxpdD0oJHtsdW5zLy8jLyB9KQpuYW1lc1NwbGl0PSgke25hbWVzLy8jLyB9KQpwYXRoc1NwbGl0PSgke3BhdGhzLy8jLyB9KQpzaXplc1NwbGl0PSgke3NpemVzLy8jLyB9KQoKbHVuc0NvdW50PSR7I2x1bnNTcGxpdFtAXX0KbmFtZXNDb3VudD0keyNuYW1lc1NwbGl0W0BdfQpwYXRoc0NvdW50PSR7I3BhdGhzU3BsaXRbQF19CnNpemVzQ291bnQ9JHsjc2l6ZXNTcGxpdFtAXX0KCmxvZyAiY291bnQgJGx1bnNDb3VudCAkbmFtZXNDb3VudCAkcGF0aHNDb3VudCAkc2l6ZXNDb3VudCIKCmlmIFtbICRsdW5zQ291bnQgLWVxICRuYW1lc0NvdW50ICYmICRuYW1lc0NvdW50IC1lcSAkcGF0aHNDb3VudCAmJiAkcGF0aHNDb3VudCAtZXEgJHNpemVzQ291bnQgXV0KdGhlbgogIGZvciAoKGlwYXJ0PTA7IGlwYXJ0PGx1bnNDb3VudDsgaXBhcnQrKykpCiAgZG8KICAgIGx1bj0ke2x1bnNTcGxpdFskaXBhcnRdfQogICAgbmFtZT0ke25hbWVzU3BsaXRbJGlwYXJ0XX0KICAgIHBhdGg9JHtwYXRoc1NwbGl0WyRpcGFydF19CiAgICBzaXplPSR7c2l6ZXNTcGxpdFskaXBhcnRdfQoKICAgIGxvZyAiY3JlYXRpbmcgZGlzayB3aXRoICRsdW4gJG5hbWUgJHBhdGggJHNpemUiCiAgICBjcmVhdGVsdm0gJGx1biAidmctJG5hbWUiICJsdi0kbmFtZSIgIiRwYXRoIiAiJHNpemUiOwogIGRvbmUKZWxzZQogIGxvZyAiY291bnQgbm90IGVxdWFsIgpmaQoKZXhpdA=="
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('images')[parameters('osType')].publisher]",
                        "offer": "[variables('images')[parameters('osType')].offer]",
                        "sku": "[variables('images')[parameters('osType')].sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('hVMName'), '-osdisk')]",
                        "caching": "[variables('hOSDiskCaching')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('hOSDiskStorageType')]"
                        }
                    },
                    "dataDisks": "[variables('sizes')[parameters('size')].hana.disks]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('hNICName'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('hVMName'), '/', 'CustomScript')]",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('hVMName'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('_SUSETags').provider)]"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [],
                    "commandToExecute": "[concat('while [ ! -f /var/lib/waagent/CustomData ]; do sleep 1; done;sleep 10;cat /var/lib/waagent/CustomData | base64 --decode | sh -s -- ', variables('sizes')[parameters('size')].hana.scriptArguments)]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('appAVSetName')]",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "tags": {
                "provider": "[toUpper(parameters('_SUSETags').provider)]"
            },
            "properties": {
                "platformFaultDomainCount": "[variables('faultDomainsPerRegion')[parameters('location')]]",
                "platformUpdateDomainCount": 20
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('appNICName'), '-', copyIndex())]",
            "apiVersion": "2017-06-01",
            "copy": {
                "name": "appNICLoop",
                "count": "[variables('appvmCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
            ],
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('_SUSETags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('internalSubnetId')]"
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": "[variables('sizes')[parameters('size')].apps.useFastNetwork]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('appVMName'), '-', copyIndex())]",
            "copy": {
                "name": "appVMLoop",
                "count": "[variables('appvmCount')]"
            },
            "dependsOn": [
                "appNICLoop",
                "[concat('Microsoft.Compute/availabilitySets/', parameters('appAVSetName'))]"
            ],
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('_SUSETags').provider)]"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('appAVSetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('sizes')[parameters('size')].apps.vmSize]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('appVMName'), '-', copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "[if(equals(length(parameters('sshKeyData')), 0), bool('false'), bool('true'))]",
                        "ssh": {
                            "publicKeys": "[variables('sshKeysArray')]"
                        }
                    },
                    "customData": "IyEvYmluL2Jhc2gKCmZ1bmN0aW9uIGxvZygpCnsKICBtZXNzYWdlPSRACiAgZWNobyAiJG1lc3NhZ2UiCiAgZWNobyAiJG1lc3NhZ2UiID4+IC92YXIvbG9nL3NhcGNvbmZpZ2NyZWF0ZQp9Cgpsb2cgJEA="
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('images')[parameters('osType')].publisher]",
                        "offer": "[variables('images')[parameters('osType')].offer]",
                        "sku": "[variables('images')[parameters('osType')].sku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('appVMName'), '-', copyIndex(), '-osdisk')]",
                        "caching": "[variables('appOSDiskCaching')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('appOSDiskStorageType')]"
                        }
                    },
                    "dataDisks": "[variables('sizes')[parameters('size')].apps.disks]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('appNICName'), '-', copyIndex()))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('appVMName'), '-', copyIndex(), '/', 'CustomScript')]",
            "apiVersion": "2015-06-15",
            "copy": {
                "name": "appCSELoop",
                "count": "[variables('appvmCount')]"
            },
            "location": "[parameters('location')]",
            "dependsOn": [
                "appVMLoop"
            ],
            "tags": {
                "provider": "[toUpper(parameters('_SUSETags').provider)]"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [],
                    "commandToExecute": "[concat('while [ ! -f /var/lib/waagent/CustomData ]; do sleep 1; done;sleep 10;cat /var/lib/waagent/CustomData | base64 --decode | sh -s -- ', variables('sizes')[parameters('size')].apps.scriptArguments)]"
                }
            }
        }
    ]
}